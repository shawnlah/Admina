version: "3"

services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5000:5000"
    env_file: ./backend/.env
    networks:
      - admina-network
    command: ["yarn", "dev"]
    environment:
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
    depends_on:
      - db
  db:
    image: mongo:latest
    volumes:
      - data:/data/db
    ports:
      - "27017:27017"
    networks:
      - admina-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/usr/src/web
      - /usr/src/web/node_modules
      - /usr/src/web/.next
    env_file: ./frontend/.env
    ports:
      - "3000:3000"
    networks:
      - admina-network
    command: ["yarn", "dev"]
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    networks:
      - admina-network
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: ${PG_DB}
      DB_USER: ${PG_USERNAME}
      DB_SCHEMA: ${PG_SCHEMA}
      DB_PASSWORD: ${PG_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - admina-network

networks:
  admina-network:
    driver: bridge

volumes:
  data:
  postgres_data:
